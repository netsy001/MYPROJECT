{"ast":null,"code":"import * as api from '../api'; // creating action : action creators are functions that return actions\n\nexport const getPosts = () => async dispatch => {\n  try {\n    console.log('hello');\n    const {\n      data\n    } = await api.fetchPosts(); //action is an object which takes in two parameters type, payload\n\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/myproject/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","console","log","data","fetchPosts","type","payload","error","message","createPost","post","updatePost","id","deletePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAE9C,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,UAAJ,EAAvB,CAFA,CAGA;;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AAEH,GAND,CAME,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACH;AACJ,CAXM;AAcP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACpD,MAAI;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACH;AACJ,CARM;AAWP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACH;AACJ,CARM;AAYP,OAAO,MAAMK,UAAU,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAClD,MAAI;AACA,UAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;AAEAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEM;AAA3B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOL,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CARM","sourcesContent":["import * as api from '../api';\r\n\r\n// creating action : action creators are functions that return actions\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n\r\n    try {\r\n        console.log('hello');\r\n        const { data } = await api.fetchPosts();\r\n        //action is an object which takes in two parameters type, payload\r\n        dispatch({ type: 'FETCH_ALL', payload: data });\r\n\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type: 'CREATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        \r\n        dispatch({ type: 'UPDATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        \r\n        dispatch({ type: 'DELETE', payload: id });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}